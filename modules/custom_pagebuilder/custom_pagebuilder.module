<?php
/**
 * @file
 * Contains custom_pagebuilder.module.
 */
define( 'CUSTOM_PAGEBUILDER_PATH', drupal_get_path('module', 'custom_pagebuilder'));
use Drupal\Core\Routing\RouteMatchInterface;

function custom_pagebuilder_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the custom_pagebuilder module.
    case 'help.page.custom_pagebuilder':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('My custom page Buider') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function custom_pagebuilder_theme() {
  return array(
    'custom_pagebuilder_admin_builder' => array(
      'variables' => array(
        'pid' => '',
        'cpb_title' => '',
        'cpb_rows_count' => '',
        'cpb_els_ops' => '',
        'cpb_rows_opts' => '',
        'cpb_columns_opts' => '',
        'cpb_page_els' => '',
      )
    ),
    'custom_pagebuilder_builder_row' => array(
      'variables' => array(
        'item_std' => '',
        'row_std' => '',
        'column_std' => '',
        'row' => '',
        'row_id' => false,
      )
    ),
    'custom_pagebuilder_builder_column' => array(
      'variables' => array(
        'item_std' => '',
        'column_std' => '',
        'column' => false,
        'column_id' => false,
        'row_id' => false,
        'column_size' => 4,
        'column_type' => '',
        'name_column_id' => ''
      )
    ),
    'custom_pagebuilder_builder_elements' => array(
      'variables' => array(
        'item_std' => '',
        'cpb_item' => '',
        'column_id' => false,
        'row_id' => false,
        'element_type' => 4,
        'element_parent' => '',
        'element_row_parent' => '',
        'label' => ''
      )
    ),
    'custom_pagebuilder_builder_fields' => array(
      'variables' => array(
        'field' => false,
        'meta' => false,
      )
    ),
    'cpb_frontend' => array(
      'variables' => array(
        'row' => false,
        'row_class' => false,
        'row_style' => false,
        'columns' => false,
      )
    ),
    'cpb_frontend_col' => array(
      'variables' => array(
        'column_id' => false,
        'col_class' => false,
        'col_style' => false,
        'field_items' => false,
      )
    ),
    'cpb_frontend_field' => array(
      'variables' => array(
        'field_item' => false,
      )
    ),
    'page_portfolio_content' => array(
      'variables' => array(
        'portfolio_catagory' => false,
        'portfolios' => false,
        'hover_effect' => false,
        'grid_col' => false,
      ),
      'path' => drupal_get_path('module', 'custom_pagebuilder') . '/templates/portfolio',
    ),
    'page_portfolio_content_owl_carousel' => array(
      'variables' => array(
        'portfolio_catagory' => false,
        'portfolios' => false,
        'hover_effect' => false,
        'grid_col' => false,
      ),
      'path' => drupal_get_path('module', 'custom_pagebuilder') . '/templates/portfolio',
    ),
  );
}

function custom_pagebuilder_list_shortcodes(){
  return $shortcodes = array(
    'cpb_textblock',
    'cpb_drupal_block',
    'cpb_heading',
    'cpb_custombutton',
    'cpb_image',
    'cpb_icon_box',
    'cpb_box_info',
    'cpb_progress_bar', 
    'cpb_tabs',
    'cpb_video_box',
    'cpb_node_view',
    'cpb_carousel',
    'cpb_portfolio_content',
    //'cpb_box_image',
    //'cpb_box_info',
    //'cpb_call_to_action',
    //'cpb_chart',
    //'cpb_code',
    //'cpb_counter',
    //'cpb_divider',
    //'cpb_hover_background',
    //'cpb_hover_box',
    //'cpb_icon_box',
    //'cpb_image',
    //'cpb_our_team',
    //'cpb_pricing_item',
    //'cpb_progress',
    
  );
}

function custom_pagebuilder_animate(){
    return array(
        ''          => '- Not Animated -',
        'fadeIn'      => 'Fade In',
        'fadeInUp'      => 'Fade In Up',
        'fadeInDown'    => 'Fade In Down ',
        'fadeInLeft'    => 'Fade In Left',
        'fadeInRight'     => 'Fade In Right ',
        'fadeInUpLarge'   => 'Fade In Up Large',
        'fadeInDownLarge'   => 'Fade In Down Large',
        'fadeInLeftLarge'   => 'Fade In Left Large',
        'fadeInRightLarge'  => 'Fade In Right Large',
        'zoomIn'      => 'Zoom In',
        'zoomInUp'      => 'Zoom In Up',
        'zoomInDown'    => 'Zoom In Down',
        'zoomInLeft'    => 'Zoom In Left',
        'zoomInRight'     => 'Zoom In Right',
        'zoomInUpLarge'   => 'Zoom In Up Large',
        'zoomInDownLarge'   => 'Zoom In Down Large',
        'zoomInLeftLarge'   => 'Zoom In Left Large',
        'bounceIn'      => 'Bounce In',
        'bounceInUp'    => 'Bounce In Up',
        'bounceInDown'    => 'Bounce In Down',
        'bounceInLeft'    => 'Bounce In Left',
        'bounceInRight'   => 'Bounce In Right',
    );
}

function custom_pagebuilder_image_hover() {
  return array(
    'imghvr-fade ' => 'imghvr-fade ',
    'imghvr-push-up ' => 'imghvr-push-up ',
    'imghvr-push-down ' => 'imghvr-push-down ',
    'imghvr-push-left ' => 'imghvr-push-left ',
    'imghvr-push-right ' => 'imghvr-push-right ',
    'imghvr-slide-up ' => 'imghvr-slide-up ',
    'imghvr-slide-down ' => 'imghvr-slide-down ',
    'imghvr-slide-left ' => 'imghvr-slide-left ',
    'imghvr-slide-right ' => 'imghvr-slide-right ',
    'imghvr-reveal-up ' => 'imghvr-reveal-up ',
    'imghvr-reveal-down ' => 'imghvr-reveal-down ',
    'imghvr-reveal-left ' => 'imghvr-reveal-left ',
    'imghvr-reveal-right ' => 'imghvr-reveal-right ',
    'imghvr-hinge-up ' => 'imghvr-hinge-up ',
    'imghvr-hinge-down ' => 'imghvr-hinge-down ',
    'imghvr-hinge-left ' => 'imghvr-hinge-left ',
    'imghvr-hinge-right ' => 'imghvr-hinge-right ',
    'imghvr-flip-horiz ' => 'imghvr-flip-horiz ',
    'imghvr-flip-vert ' => 'imghvr-flip-vert ',
    'imghvr-flip-diag-1 ' => 'imghvr-flip-diag-1 ',
    'imghvr-flip-diag-2 ' => 'imghvr-flip-diag-2 ',
    'imghvr-shutter-out-horiz ' => 'imghvr-shutter-out-horiz ',
    'imghvr-shutter-out-vert ' => 'imghvr-shutter-out-vert ',
    'imghvr-shutter-out-diag-1 ' => 'imghvr-shutter-out-diag-1 ',
    'imghvr-shutter-out-diag-2 ' => 'imghvr-shutter-out-diag-2 ',
    'imghvr-shutter-in-horiz ' => 'imghvr-shutter-in-horiz ',
    'imghvr-shutter-in-vert ' => 'imghvr-shutter-in-vert ',
    'imghvr-shutter-in-out-horiz ' => 'imghvr-shutter-in-out-horiz ',
    'imghvr-shutter-in-out-vert ' => 'imghvr-shutter-in-out-vert ',
    'imghvr-shutter-in-out-diag-1 ' => 'imghvr-shutter-in-out-diag-1 ',
    'imghvr-shutter-in-out-diag-2 ' => 'imghvr-shutter-in-out-diag-2 ',
    'imghvr-fold-up ' => 'imghvr-fold-up ',
    'imghvr-fold-down ' => 'imghvr-fold-down ',
    'imghvr-fold-left ' => 'imghvr-fold-left ',
    'imghvr-fold-right ' => 'imghvr-fold-right ',
    'imghvr-zoom-in ' => 'imghvr-zoom-in ',
    'imghvr-zoom-out ' => 'imghvr-zoom-out ',
    'imghvr-zoom-out-up ' => 'imghvr-zoom-out-up ',
    'imghvr-zoom-out-down ' => 'imghvr-zoom-out-down ',
    'imghvr-zoom-out-left ' => 'imghvr-zoom-out-left ',
    'imghvr-zoom-out-right ' => 'imghvr-zoom-out-right ',
    'imghvr-zoom-out-flip-horiz ' => 'imghvr-zoom-out-flip-horiz ',
    'imghvr-zoom-out-flip-vert ' => 'imghvr-zoom-out-flip-vert ',
    'imghvr-blur' => 'imghvr-blur',
  );
}

//function variable_get($name, $default = NULL) {
//  global $conf;
//  return isset($conf[$name]) ? $conf[$name] : $default;
//}

function custom_pagebuilder_makeid($length = 5){
    $characters = '0123456789abcdefghijklmnopqrstuvwxyz';
    $randomString = '';
    for ($i = 0; $i < $length; $i++) {
        $randomString .= $characters[rand(0, strlen($characters) - 1)];
    }
    return $randomString;
}

function custom_pagebuilder_includes( $path, $ifiles=array() ){
    if( !empty($ifiles) ){
         foreach( $ifiles as $key => $file ){
            $file  = $path.'/'.$file; 
            if(is_file($file)){
                require($file);
            }
         }   
    }else {
        $files = glob($path);
        foreach ($files as $key => $file) {
            if(is_file($file)){
                require($file);
            }
        }
    }
}

/*================================================
                Block for theme
=================================================*/                
function custom_pagebuilder_get_blocks_options() {
  static $_blocks_array = array();
    if (empty($_blocks_array)) {
      // Get default theme for user.
      $theme_default = \Drupal::config('system.theme')->get('default');
      // Get storage handler of block.
      $block_storage = \Drupal::entityManager()->getStorage('block');
      // Get the enabled block in the default theme.
      $entity_ids = $block_storage->getQuery()->condition('theme', $theme_default)->execute();
      $entities = $block_storage->loadMultiple($entity_ids);
      $_blocks_array = [];
      foreach ($entities as $block_id => $block) {
        $_blocks_array[$block_id] = $block->label();
      }
      asort($_blocks_array);
    }
    return $_blocks_array;
}

function custom_pagebuilder_render_block($key) {
    $block = \Drupal\block\Entity\Block::load($key);
    if($block){
      $block_content = \Drupal::entityManager()
        ->getViewBuilder('block')
        ->view($block);
        $block = null;
      return drupal_render($block_content);
    }else{
      return '<div>Missing view, block "'.$key.'"</div>';
    }
  }

  function custom_pagebuilder_single_field( $field, $meta ){
  	$output = '';
  	if( isset( $field['type'] ) ) { 
  		$output .= '<div class="single-field '. $field['type'] .' clearfix">';
  			$output .= '<div class="field-title">';
  				 if( key_exists('title', $field) ) {
  					$output .= '<span class="label-field">'. $field['title'] .'</span>';
  				 } 
  			$output .= '</div>';
  			$output .= '<div class="field-content">';
        $bb_field = new \Drupal\custom_pagebuilder\Core\ClassFieldsCustomPagebuilder();
        $field_function = 'render_field_'. $field['type'];
        
        $output .= $bb_field->$field_function($field, $meta);
  			$output .= '</div>';
  		$output .= '</div>';
  	}
    return $output;
  }

  
  function template_preprocess_custom_pagebuilder(&$variables) {
    $theme = \Drupal::theme()->getActiveTheme()->getName();
    $available_regions = system_region_list($theme, 'REGIONS_ALL');
    //kint($available_regions);
    foreach ($available_regions as $key_region => $region) {
      $blocks =  \Drupal::entityManager()->getStorage('block')->loadByProperties(array('theme' => $theme, 'region' => $region));
      //uasort($blocks, 'Drupal\block\Entity\Block::sort');
      $build = array();
      foreach ($blocks as $key => $block) {
        if ($block->access('view')) {
          $view_builder = \Drupal::entityTypeManager()->getViewBuilder($block->getEntityTypeId());
          $build[$key] = $view_builder->view($block, 'block');
        }
      }
      //kint($region);
     if(!empty($build)) {
       $region_name = \Drupal\Component\Utility\Unicode::strtolower($key_region);
       unset($variables['page'][$region_name]);
       $variables['page'][$region_name] = $build;
       $variables['page'][$region_name]['#region'] = $region_name;
     }
      
      
    }
    kint($variables['page']);
    //kint($variables);
  } 
  
  function custom_pagebuilder_theme_registry_alter(&$theme_registry) {
  }
  
  function custom_pagebuilder_local_tasks_alter(&$local_tasks) {
    
    $local_tasks['custom_pagebuilder.admin.config'] = [
      'title' => new \Drupal\Core\StringTranslation\TranslatableMarkup('Config Page'),
      'base_route' => 'entity.custom_pagebuilder.canonical',
      'route_name' => 'custom_pagebuilder.admin.config',
      //'route_parameters' => array('custom_pagebuilder' => 1),
      'class' => 'Drupal\Core\Menu\LocalTaskDefault',
      'options' => [],
    ];
    //kint($local_tasks);
  }